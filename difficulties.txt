Back-end
1. flat-file-db need a local file to persist data. Once it changes(I/O) it will trigger nodemon watch. It leads to infinity watch...
solution: nodemon.json -> field 'ignore'

2. For the simplicity of data stock, flat-file-db just store in the Map<meetingID: Number, meeting: Meeting>, that's why back-end api all use meetingID as the params, and other info passed by body.

Front-end
1. "hot: true" automatically applies HMR plugin
solution: update node and npm (10.15 -> 16.14)

2. Why not use .ts in front-end?
As mentioned in the context "Do not use any scaffolding tool such as `create-react-app`, or any CSS framework",
for saving time and avoiding the risk of compability with react eco-system.

3. Migrate front-end into ts.....Fine, l compromise.
types adding; images "./cutom.d.ts"; webpack config

4. React router useNavigate in class component
wrap with a functional component...and pass navigate from props.. cons!

5. setState confusing behavior

TODO LISTï¼š
1. polling with Etag | comet | SSE | webSocket
2. back-end restful expo
3. security issues?